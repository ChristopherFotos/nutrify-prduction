{"version":3,"sources":["LOGO-small.svg","webpack:///./src/LOGO-small.svg?0e1a","searchSummary.js","MoreSearchOptions.js","searchDropdown.js","searchComponent.js","loginDropdown.js","recipeCard.js","cardContainer.js","App.js","index.js"],"names":["module","exports","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","x","y","_ref","svgRef","title","props","width","height","viewBox","xmlSpace","style","fillRule","clipRule","strokeLinejoin","strokeMiterlimit","ref","transform","cx","cy","r","fill","fontFamily","fontWeight","fontSize","d","ForwardRef","forwardRef","SearchSummary","query","className","MoreSearchOptions","Fragment","onClick","SearchDropdown","state","calFrom","calTo","options","red","blue","id","type","onChange","updateOptions","name","placeholder","e","value","isNaN","React","Component","SearchBar","useState","input","setInput","balanced","lowCarb","lowFat","lowSodium","highFiber","highProtein","searchOptions","setQuery","isExpanded","toggleExpand","onKeyPress","handleEnter","preventDefault","dropdown","document","getElementById","classList","remove","add","Array","from","children","forEach","elem","LoginDropdown","emailValue","setEmailValue","passwordValue","setPasswordValue","verifyPasswordValue","setVerifyPasswordValue","invalidLogin","setInvalidLogin","noPassword","setNoPassword","noEmail","setNoEmail","setNoVerifyPassword","mismatchedPasswords","setMismatchedPasswords","checkRenderProp","render","loginFunction","a","creds","JSON","stringify","email","password","verifyPassword","fetch","method","mode","headers","credentials","body","res","status","isLoggedIn","res2","window","location","reload","data-dropdown","for","RecipeCard","saved","setSaved","handleClick","expanded","innerText","parentElement","li","display","ingredientLines","recipe","img","image","label","digest","url","calories","Math","floor","bodyString","src","alt","href","map","ingredientLine","total","unit","healthLabels","CardContainer","recipes","uri","searched","App","setRecipes","setDropdown","loggedIn","setLoggedIn","setSearched","useEffect","addEventListener","dataset","req","user","loginDropdown","logout","then","json","data","hits","queries","ReactDOM"],"mappings":"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","file":"static/js/main.1d99cff1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/LOGO-small.32e200b3.svg\";","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"tspan\", {\n  x: \"481.72px 503.392px 531.976px \",\n  y: \"263.758px 263.758px 263.758px \"\n}, \"ify\");\n\nvar SvgLogoSmall = function SvgLogoSmall(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"20%\",\n    height: \"20%\",\n    viewBox: \"0 0 204 91\",\n    xmlSpace: \"preserve\",\n    style: {\n      fillRule: \"evenodd\",\n      clipRule: \"evenodd\",\n      strokeLinejoin: \"round\",\n      strokeMiterlimit: 2\n    },\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"matrix(1,0,0,1,-34.025,-30.2984)\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"matrix(0.815777,0,0,0.815777,-456.129,-138.599)\"\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 656.14,\n    cy: 262.392,\n    r: 55.298,\n    style: {\n      fill: \"rgb(30,229,107)\"\n    }\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"matrix(0.599153,0,0,0.546049,-133.745,-70.1757)\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    x: 280.012,\n    y: 184.086,\n    width: 75.291,\n    height: 82.613,\n    style: {\n      fill: \"rgb(30,229,107)\"\n    }\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"matrix(0.651718,0,0,0.651718,-151.056,-79.2598)\"\n  }, /*#__PURE__*/React.createElement(\"text\", {\n    x: \"312.016px\",\n    y: \"263.758px\",\n    style: {\n      fontFamily: \"'Montserrat-Bold', 'Montserrat'\",\n      fontWeight: 700,\n      fontSize: 72,\n      fill: \"white\"\n    }\n  }, \"Nu\"), /*#__PURE__*/React.createElement(\"text\", {\n    x: \"419.656px\",\n    y: \"263.758px\",\n    style: {\n      fontFamily: \"'Montserrat-Bold', 'Montserrat'\",\n      fontWeight: 700,\n      fontSize: 72,\n      fill: \"rgb(30,229,107)\"\n    }\n  }, \"tr\", _ref2)), /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"matrix(0.45019,0,0,0.454366,43.2584,-38.5243)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M332.654,151.47L431.872,151.47L431.872,250.414C431.719,196.061 387.406,151.94 332.654,151.47Z\",\n    style: {\n      fill: \"rgb(30,229,107)\"\n    }\n  }))));\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgLogoSmall, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/LOGO-small.32e200b3.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\r\n//going to have to loop through the options object and map each search option to its on <p> element\r\nconst SearchSummary = (props) => {\r\n  const renderP = () => {\r\n    if (props.query) {\r\n      return (\r\n        <p className=\"search-summary-p\">\r\n          Showing results for <b>{props.query}</b>\r\n        </p>\r\n      );\r\n    } else return null;\r\n  };\r\n\r\n  return renderP();\r\n};\r\n\r\nexport default SearchSummary;\r\n","import React, { useState } from \"react\";\r\n\r\nconst MoreSearchOptions = (props) => {\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"search-options-label\" onClick={props.onClick}>\r\n        More search options\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default MoreSearchOptions;\r\n","import React, { Component } from \"react\";\r\n\r\n/*==================================================================================================\r\n  This componentrenders the search options dropdown. It uses CSS transitions to collapse and expand. \r\n  It is rendered by SearchBar and takes that component's updateOptions funciton as a prop. This \r\n  component holds several checkboxes that correspond with the diet labels offered by the edamam \r\n  API. When one of the checkboxes is clicked, the props.updateOptions function  is called.\r\n  ================================================================================================*/\r\n\r\nclass SearchDropdown extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { calFrom: null, calTo: null }\r\n    this.calTo = 'null'\r\n    this.options = {\r\n      red: false,\r\n      blue: false,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"search-options-expand\" className=\"search-dropdown-closed\">\r\n        <label className=\"search-option-heading-closed\">\r\n          <input\r\n            type=\"checkbox\"\r\n            onChange={this.props.updateOptions}\r\n            name=\"low carb\"\r\n          />\r\n          <span>Low carb</span>\r\n        </label>\r\n\r\n        <label className=\"search-option-heading-closed\">\r\n          <input\r\n            type=\"checkbox\"\r\n            onChange={this.props.updateOptions}\r\n            name=\"low fat\"\r\n          />\r\n          <span>Low fat</span>\r\n        </label>\r\n\r\n        <label className=\"search-option-heading-closed\">\r\n          <input\r\n            type=\"checkbox\"\r\n            onChange={this.props.updateOptions}\r\n            name=\"balanced\"\r\n          />\r\n          <span>Balanced</span>\r\n        </label>\r\n\r\n        <label className=\"search-option-heading-closed\">\r\n          <input\r\n            type=\"checkbox\"\r\n            onChange={this.props.updateOptions}\r\n            name=\"high protein\"\r\n          />\r\n          <span>High protein</span>\r\n        </label>\r\n\r\n        <label className=\"search-option-heading-closed\">\r\n          <input\r\n            type=\"checkbox\"\r\n            onChange={this.props.updateOptions}\r\n            name=\"high fiber\"\r\n          />\r\n          <span>High fiber</span>\r\n        </label>\r\n\r\n        <label className=\"search-option-heading-closed\">\r\n          <input\r\n            type=\"checkbox\"\r\n            onChange={this.props.updateOptions}\r\n            name=\"low sodium\"\r\n          />\r\n          <span>Low sodium</span>\r\n        </label>\r\n        <p>\r\n          {/* CALORIES */}\r\n          <span className=\"search-option-heading-closed\">nutrient options:</span>\r\n          <input\r\n            className=\"validate\"\r\n            placeholder=\"min calories\"\r\n            name=\"cal-from\"\r\n            type=\"number\"\r\n            onChange={(e) => { this.props.updateOptions(e) }\r\n            }\r\n            value={this.calFrom}\r\n            id=\"option-input-1\"\r\n          />\r\n          <input\r\n            placeholder=\"max calories\"\r\n            name=\"cal-to\"\r\n            type=\"number\"\r\n            value={this.calTo}\r\n            onChange={(e) => {\r\n              if (!isNaN(e.target.value)) { this.props.updateOptions(e) }\r\n            }}\r\n            className=\"validate\"\r\n            id=\"option-input-2\"\r\n          />\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchDropdown;\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport logo, { ReactComponent as Logo } from \"./LOGO-small.svg\";\r\nimport SearchSummary from \"./searchSummary\";\r\nimport MoreSearchOptions from \"./MoreSearchOptions\";\r\nimport SearchDropdown from \"./searchDropdown\";\r\n\r\nconst SearchBar = (props) => {\r\n  const [input, setInput] = useState(\"\");\r\n  const [searchOptions, setSearchOptions] = useState({\r\n    balanced: false,\r\n    lowCarb: false,\r\n    lowFat: false,\r\n    lowSodium: false,\r\n    highFiber: false,\r\n    highProtein: false,\r\n  });\r\n  const [query, setQuery] = useState();\r\n  const [isExpanded, toggleExpand] = useState(false);\r\n\r\n  const handleClick = (e) => {\r\n    e.preventDefault();\r\n    //the line below calls the function and passes it the values from the input and the dropdown\r\n    props.onClick(input, searchOptions);\r\n    setQuery(input, searchOptions);\r\n    // props.setSearched()\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setInput(e.target.value);\r\n  };\r\n\r\n  const handleEnter = (e) => {\r\n    if (e.key === 'Enter') {\r\n      props.onClick(input, searchOptions);\r\n      setQuery(input, searchOptions);\r\n    }\r\n  }\r\n\r\n\r\n\r\n  const updateOptions = (e) => {\r\n    e.target.name === \"low carb\"\r\n      ? (searchOptions.lowCarb = !searchOptions.lowCarb)\r\n      : (searchOptions.lowCarb = searchOptions.lowCarb);\r\n\r\n    e.target.name === \"low fat\"\r\n      ? (searchOptions.lowFat = !searchOptions.lowFat)\r\n      : (searchOptions.lowFat = searchOptions.lowFat);\r\n\r\n    e.target.name === \"balanced\"\r\n      ? (searchOptions.balanced = !searchOptions.balanced)\r\n      : (searchOptions.balanced = searchOptions.balanced);\r\n\r\n    e.target.name === \"high protein\"\r\n      ? (searchOptions.highProtein = !searchOptions.highProtein)\r\n      : (searchOptions.highProtein = searchOptions.highProtein);\r\n\r\n    e.target.name === \"high fiber\"\r\n      ? (searchOptions.highFiber = !searchOptions.highFiber)\r\n      : (searchOptions.highFiber = searchOptions.highFiber);\r\n\r\n    e.target.name === \"low sodium\"\r\n      ? (searchOptions.lowSodium = !searchOptions.lowSodium)\r\n      : (searchOptions.lowSodium = searchOptions.lowSodium);\r\n\r\n    if (e.target.name === 'cal-from' && !isNaN(e.target.value)) {\r\n      searchOptions.calFrom = e.target.value\r\n    }\r\n\r\n    if (e.target.name === 'cal-to' && !isNaN(e.target.value)) {\r\n      searchOptions.calTo = e.target.value\r\n    }\r\n  };\r\n\r\n  const toggle = () => {\r\n    toggleExpand(!isExpanded);\r\n\r\n    let dropdown = document.getElementById(\"search-options-expand\");\r\n\r\n    dropdown.classList.remove(\"search-dropdown-closed\");\r\n    dropdown.classList.add(\"search-dropdown-open\");\r\n\r\n\r\n    let childArray = Array.from(dropdown.children);\r\n\r\n    childArray.forEach((elem) => {\r\n      elem.classList.remove(\"search-option-heading-closed\");\r\n      elem.classList.add(\"search-option-heading-open\");\r\n    });\r\n  };\r\n\r\n  const toggleOff = () => {\r\n    toggleExpand(!isExpanded);\r\n    let dropdown = document.getElementById(\"search-options-expand\");\r\n\r\n    dropdown.classList.remove(\"search-dropdown-open\");\r\n    dropdown.classList.add(\"search-dropdown-closed\");\r\n\r\n    let childArray = Array.from(dropdown.children);\r\n\r\n    childArray.forEach((elem) => {\r\n      elem.classList.remove(\"search-option-heading-open\");\r\n      elem.classList.add(\"search-option-heading-closed\");\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form className=\"search-form\">\r\n      <div className=\"search-flexbox-span flex-align-bottom\">\r\n        <Logo></Logo>\r\n        <span className=\"subline\">powered by edamam</span>\r\n      </div>\r\n      <input\r\n        type=\"text\"\r\n        id=\"search-bar\"\r\n        value={input}\r\n        onChange={handleChange}\r\n        onKeyPress={(e) => handleEnter(e)}\r\n        className=\"search-bar\"\r\n        placeholder=\"search by ingredient or recipe name\"\r\n      ></input>\r\n      <div className=\"search-flexbox-span\">\r\n        <a\r\n          className=\"waves-effect waves-light btn search-button\"\r\n          onClick={handleClick}\r\n        >\r\n          search\r\n        </a>\r\n\r\n        <MoreSearchOptions\r\n          onClick={isExpanded ? toggleOff : toggle}\r\n        ></MoreSearchOptions>\r\n      </div>\r\n      <SearchDropdown updateOptions={updateOptions}></SearchDropdown>\r\n      <SearchSummary query={query}></SearchSummary>\r\n    </form >\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import React, { Component, useState, useEffect } from \"react\";\r\n\r\n\r\nconst LoginDropdown = (props) => {\r\n\r\n    const [emailValue, setEmailValue] = useState('');   // value of the email input\r\n    const [passwordValue, setPasswordValue] = useState('');   // value of the input \r\n    const [verifyPasswordValue, setVerifyPasswordValue] = useState('');   // value of the verify password input\r\n    const [invalidLogin, setInvalidLogin] = useState(false) // following hooks are set to true when the user's input is invalid or empty\r\n    const [noPassword, setNoPassword] = useState(false)\r\n    const [noEmail, setNoEmail] = useState(false)\r\n    const [noVerifyPassword, setNoVerifyPassword] = useState(false)\r\n    const [mismatchedPasswords, setMismatchedPasswords] = useState(false) // set to true when passwords don't match while registering \r\n\r\n    // The following 3 functions sync the value of the login inputs\r\n    // with their respective state hooks.  \r\n\r\n    let emailChange = (e) => {\r\n        setEmailValue(e.target.value)\r\n    }\r\n\r\n    let passwordChange = (e) => {\r\n        setPasswordValue(e.target.value)\r\n    }\r\n    let verifyPasswordChange = (e) => {\r\n        setVerifyPasswordValue(e.target.value)\r\n    }\r\n\r\n    // The following function returns the value of the render prop \r\n\r\n    const checkRenderProp = () => {\r\n        if (props.render === 'login') {\r\n            return 'login'\r\n        } else { return 'signup' }\r\n    }\r\n\r\n    //  The following function handles logging in and signing up. It runs\r\n    //  when the login or signup button is clicked.  \r\n\r\n    async function loginFunction() {\r\n\r\n        let creds = JSON.stringify({ // get and stringify the value of the inputs\r\n            email: emailValue,\r\n            password: passwordValue,\r\n            verifyPassword: verifyPasswordValue\r\n        })\r\n\r\n        if (checkRenderProp() === 'signup' && passwordValue !== verifyPasswordValue) {\r\n            setMismatchedPasswords(true)\r\n            return\r\n        }\r\n\r\n        if (emailValue === '') {\r\n            setNoEmail(true)\r\n            return\r\n        }\r\n\r\n        if (passwordValue === '') {\r\n            setNoPassword(true)\r\n            return\r\n        }\r\n\r\n        if (checkRenderProp() === 'signup' && verifyPasswordValue === '') {\r\n            setNoVerifyPassword(true)\r\n        }\r\n\r\n        const res = await fetch(`/user/${checkRenderProp()}`, { // use those values to send a request to the login or signup route, depending on the value of props.render. \r\n            method: 'POST',\r\n            mode: 'cors',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            credentials: 'include',\r\n            body: creds\r\n\r\n\r\n        })\r\n\r\n        if (res.status === 401) {\r\n            setInvalidLogin(true)\r\n            props.isLoggedIn(false)\r\n            return\r\n        }\r\n\r\n        if (res.status === 201 || res.status === 200) { // if the response is OK, run the props.loggedIn function with argument 'true'. This will set the isLoggedIn to true in the app component. \r\n            props.isLoggedIn(true)\r\n            setInvalidLogin(false)\r\n\r\n            if (checkRenderProp() === 'signup' && !invalidLogin) { // if props.render is 'signup' and invalidLogin is false, login to the account the user just created. \r\n                const res2 = await fetch('/user/login', {\r\n                    method: 'POST',\r\n                    mode: 'cors',\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    credentials: 'include',\r\n                    body: creds\r\n                })\r\n\r\n                if (res2.status === 409) {\r\n                    setInvalidLogin(true)\r\n                } else if (res2.status === 200) {\r\n                    setInvalidLogin(false)\r\n                    window.location.reload()\r\n                    props.isLoggedIn(true)\r\n                }\r\n            }\r\n        } else if (res.status === 409) {\r\n            setInvalidLogin(true)\r\n        }\r\n    }\r\n\r\n    let handleEnter = (e) => {\r\n        if (e.key === 'Enter') {\r\n            loginFunction()\r\n        }\r\n    }\r\n\r\n    // The return statement begins below\r\n\r\n    return (\r\n        <div className=\"login-dropdown\" id=\"login-dropdown\" data-dropdown='true'>\r\n            <h4 data-dropdown='true'>\r\n                {props.render === 'login' && 'login'}\r\n                {props.render === 'signup' && 'signup'}\r\n            </h4>\r\n            <form data-dropdown='true'>\r\n                <label for='email' data-dropdown='true'>Email</label>\r\n                <input type='text' name='email' data-dropdown='true' className=\"login-input\" onChange={emailChange} onKeyPress={(e) => { handleEnter(e) }} />\r\n                <label for='password' data-dropdown='true'>Password</label>\r\n                <input type='password' name='password' data-dropdown='true' className=\"login-input\" onChange={passwordChange} onKeyPress={(e) => { handleEnter(e) }} />\r\n                {props.render === 'signup' &&\r\n                    <React.Fragment>\r\n                        <label for='verify-password' data-dropdown='true'>Verify password</label>\r\n                        <input type='password' name='verify-password' data-dropdown='true' className=\"login-input\" onChange={verifyPasswordChange} onKeyPress={(e) => { handleEnter(e) }} />\r\n                    </React.Fragment>\r\n                }\r\n                <span className=\"login-button\" onClick={loginFunction} data-dropdown='true'>\r\n                    {props.render === 'login' && 'login'}\r\n                    {props.render === 'signup' && 'sign up'}\r\n                </span>\r\n            </form>\r\n            {(invalidLogin && props.render === 'signup') &&\r\n                <p>Whoops! That email is already being used.</p>\r\n            }\r\n            {(invalidLogin && props.render === 'login') &&\r\n                <p>Whoops! Invalid email or password.</p>\r\n            }\r\n            {mismatchedPasswords &&\r\n                <p>Whoops! Those passwords don't match.</p>\r\n            }\r\n            {noEmail &&\r\n                <p>Whoops! Please provide an email address</p>\r\n            }\r\n            {noPassword &&\r\n                <p>Whoops! Please provide a password</p>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginDropdown","import React, { useEffect, useState } from \"react\";\r\nimport { CSSTransition } from 'react-transition-group'\r\n\r\n\r\nconst RecipeCard = (props) => {\r\n  let [saved, setSaved] = useState(false)\r\n\r\n  let handleClick = (e) => {\r\n\r\n    if (!e.target.expanded) {\r\n      //Checks if the div is collpased and opens it\r\n      e.target.expanded = true;\r\n      e.target.innerText = \"Hide\";\r\n      Array.from(e.target.parentElement.children[1].children).forEach(\r\n        (li) => {\r\n          li.style.display = \"block\";\r\n        }\r\n      );\r\n      e.target.parentElement.children[1].classList.remove(\r\n        \"card-content-closed\"\r\n      );\r\n      e.target.parentElement.children[1].classList.add(\"card-content-open\");\r\n      e.target.parentElement.classList.remove(\"card-closed\");\r\n      e.target.parentElement.classList.add(\"card-open\");\r\n    } else if (e.target.expanded) {\r\n      //Checks if the div is open and collapses it\r\n      e.target.expanded = false;\r\n      e.target.innerText = \"Show\";\r\n      Array.from(e.target.parentElement.children[1].children).forEach(\r\n        (li) => {\r\n          li.style.display = \"none\";\r\n        }\r\n      );\r\n      e.target.parentElement.children[1].classList.remove(\r\n        \"card-content-open\"\r\n      );\r\n      e.target.parentElement.children[1].classList.add(\r\n        \"card-content-closed\"\r\n      );\r\n      e.target.parentElement.children[1].classList.remove(\"card-open\");\r\n      e.target.parentElement.classList.remove(\"card-open\");\r\n      e.target.parentElement.classList.add(\"card-closed\");\r\n    }\r\n  }\r\n\r\n\r\n  async function saveFunction() {\r\n    // Create an object to form the body of our POST request\r\n    if (!saved) {\r\n      let body = {\r\n        ingredientLines: props.recipe.recipe.ingredientLines,\r\n        img: props.recipe.recipe.image,\r\n        label: props.recipe.recipe.label,\r\n        digest: props.recipe.recipe.digest,\r\n        url: props.recipe.recipe.url,\r\n        calories: Math.floor(props.recipe.recipe.calories)\r\n        // Modify this object to include nutrition labels and link to instructions \r\n      }\r\n\r\n\r\n      let bodyString = JSON.stringify(body)\r\n\r\n      // Make the fetch request \r\n      const res = await fetch('/user/save', {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        credentials: 'include',\r\n        body: bodyString\r\n      })\r\n\r\n      setSaved(!saved)\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n\r\n    <div className=\"grid-card\">\r\n      <img\r\n        src={props.recipe.recipe.image}\r\n        className=\"card-img\"\r\n        alt={props.recipe.recipe.label}\r\n      />\r\n      <span className=\"recipe-title\">{props.recipe.recipe.label}</span>\r\n      {props.isLoggedIn !== null && <span className={!saved && 'save-button'} onClick={saveFunction}>\r\n        {!saved && 'Save recipe'}\r\n        {saved && <span className='save-button-inactive'>Recipe saved!</span>}\r\n      </span>}\r\n      <div className=\"card-content\">\r\n        <span className=\"show-details show-details-open ingredient-card-tag\" onClick={handleClick}>\r\n          Show\r\n        </span>\r\n\r\n        <div className=\"card-content-closed\">\r\n          <a href={props.recipe.recipe.url} target=\"_blank\" className='full-instructions-link' style={{ display: \"none\" }}>See full instructions</a>\r\n          <ul style={{ display: \"none\" }}>\r\n            {props.recipe.recipe.ingredientLines.map((ingredientLine) => {\r\n              return <li>{ingredientLine}</li>;\r\n            })}\r\n          </ul>\r\n\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"card-content\">\r\n        <span className=\"show-details show-details-open nutrition-card-tag\" onClick={handleClick}>\r\n          Show\r\n        </span>\r\n\r\n        <div className=\"card-content-closed\">\r\n          <ul style={{ display: \"none\" }}>\r\n            {props.recipe.recipe.digest.map((i) => {\r\n              return (\r\n                <li><b>{i.label}:</b> {Math.floor(i.total)} {i.unit}</li>\r\n              )\r\n            })}\r\n          </ul>\r\n        </div>\r\n\r\n        <div className=\"recipe-summary-div\">\r\n          {props.recipe.recipe.ingredientLines.length} ingredients {props.recipe.recipe.healthLabels.map((label) => { return `| ${label} ` })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecipeCard;\r\n","import React from \"react\";\r\nimport RecipeCard from \"./recipeCard\";\r\nimport './styles.css'\r\n\r\n\r\n// This component renders a container for the recipe cards that are returned when the user enters a search term. It accepts an array\r\n// of recipe objects as its props, and it uses that array to render recipe card components. When this component rerenders, the useEffect\r\n// hook adds event listeners to the cards so that they can be opened and closed on click.\r\n\r\nconst CardContainer = (props) => {\r\n\r\n  if (props.recipes) {\r\n    return (\r\n        <div className=\"card-container\">\r\n          {props.recipes.map((recipe) => {\r\n            return (\r\n\r\n            <RecipeCard recipe={recipe} isLoggedIn={props.isLoggedIn} key={recipe.recipe.label + '_uri_' + recipe.recipe.uri}></RecipeCard>\r\n\r\n          );\r\n          })}\r\n        </div>\r\n      \r\n    );\r\n  } else if (!props.recipes && props.searched){\r\n    return (\r\n      <h3 id=\"no-results-message\">Sorry! We couldn't find anything.</h3>\r\n    )\r\n  } else { return null }\r\n};\r\n\r\nexport default CardContainer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport SearchBar from \"./searchComponent\";\r\nimport SearchSummary from \"./searchSummary\";\r\nimport LoginDropdown from \"./loginDropdown\";\r\nimport './styles.css'\r\n\r\nimport CardContainer from \"./cardContainer\";\r\n\r\nconst App = () => {\r\n  const [recipes, setRecipes] = useState([]);\r\n  const [query, setQuery] = useState(\"\");\r\n  const [dropdown, setDropdown] = useState(null)\r\n  const [loggedIn, setLoggedIn] = useState(null)\r\n  const [searched, setSearched] = useState(false)\r\n  const APP_ID = \"75c55f11\";\r\n  const APP_KEY = \"85c90ba0da33bd59f927417d3d72febe\";\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('mousedown', (e) => {\r\n      if (dropdown === 'login' || dropdown === 'signup') {\r\n        if (e.target.id !== 'login-dropdown' &&\r\n          e.target.id !== 'login-button' &&\r\n          e.target.id !== 'signup-button' &&\r\n          e.target.id !== 'login-dropdown' &&\r\n          !e.target.dataset.dropdown) {\r\n          setDropdown(null)\r\n        }\r\n      }\r\n    })\r\n  })\r\n\r\n  useEffect(() => { // Check if a user is logged in, change logged in if so\r\n    const req = async () => {\r\n      let res = await fetch('/user/verify',\r\n        {\r\n          method: 'POST',\r\n          mode: 'cors',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          credentials: 'include'\r\n        }\r\n      )\r\n      if (res.status === 200) { setLoggedIn(true); }\r\n    }\r\n    req()\r\n  }, [loggedIn])\r\n\r\n  const isLoggedIn = (user) => { // This function is passed down the component tree to the loginDropdown. When a user successfully log in this function is run with the the argument 'true'\r\n    setLoggedIn(user)\r\n  }\r\n\r\n  const loginDropdown = (target) => {  // Toggling the signup dropdown\r\n    if (target === 'signup') {\r\n      if (dropdown === 'signup') {\r\n        setDropdown(null)\r\n      } else { setDropdown('signup') }\r\n    }\r\n\r\n    if (target === 'login') {   // Toggling the login dropdown\r\n      if (dropdown === 'login') {\r\n        setDropdown(null)\r\n      } else { setDropdown('login') }\r\n    }\r\n  };\r\n\r\n  const logout = async () => {  // Making the logout request \r\n    let res = await fetch('/user/logout',\r\n      {\r\n        method: 'GET',\r\n        mode: 'cors',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        credentials: 'include'\r\n      }\r\n    )\r\n    if (res.status === 200) {\r\n      window.location.reload()\r\n    }\r\n  }\r\n\r\n  const getRecipes = (input, options) => {    // Building the request string and sending the request with fetch\r\n    let req = `https://api.edamam.com/search?q=${input}&app_id=${APP_ID}&app_key=${APP_KEY}&from=0&to=100`;\r\n\r\n    // The following conditionals add the user's diet type selections to the request string (above)\r\n    if (options.lowCarb) {\r\n      req += `&diet=low-carb`;\r\n    }\r\n    if (options.lowFat) {\r\n      req += `&diet=low-fat`;\r\n    }\r\n\r\n    if (options.balanced) {\r\n      req += `&diet=balanced`;\r\n    }\r\n\r\n    if (options.highProtein) {\r\n      req += `&diet=high-protein`;\r\n    }\r\n\r\n    if (options.highFiber) {\r\n      req += `&diet=high-fiber`;\r\n    }\r\n\r\n    if (options.lowSodium) {\r\n      req += `&diet=low-sodium`;\r\n    }\r\n\r\n    if ((options.calFrom && options.calTo) && (options.calFrom < options.calTo)) {\r\n      req += `&calories=${options.calFrom}-${options.calTo}`\r\n    }\r\n\r\n    fetch(req)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setRecipes(data.hits);\r\n        setSearched(true)\r\n      });\r\n  };\r\n\r\n  const renderSearchSummary = () => {   // Render the search summary \r\n    if (query) {\r\n      return <SearchSummary queries={null}></SearchSummary>;\r\n    } else return null;\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"navbar\">\r\n        {!loggedIn &&\r\n          <div className=\"navbar-button-container\" id='guest-navbar'>\r\n            <span className=\"navbar-button\" id=\"login-button\" onClick={() => loginDropdown('login')}>login</span>\r\n            <span className=\"navbar-button\" id=\"signup-button\" onClick={() => loginDropdown('signup')}>sign up</span>\r\n            {dropdown === 'login' &&\r\n              <LoginDropdown render='login' isLoggedIn={isLoggedIn}></LoginDropdown>\r\n            }\r\n            {dropdown === 'signup' &&\r\n              <LoginDropdown render='signup' isLoggedIn={isLoggedIn}></LoginDropdown>\r\n            }\r\n          </div>\r\n        }\r\n\r\n        {loggedIn &&\r\n          <div className=\"navbar-button-container\" id='guest-navbar'>\r\n            <a href=\"/dashboard\" className=\"navbar-button\" id=\"dashboard-button\">dashboard</a>\r\n            <span className=\"navbar-button\" id=\"login-button\" onClick={logout}>logout</span>\r\n          </div>\r\n        }\r\n      </div>\r\n      <div className=\"app-container\">\r\n        <SearchBar onClick={getRecipes} setSearched={() => { setSearched(true) }}></SearchBar>\r\n        {renderSearchSummary()}\r\n        <CardContainer recipes={recipes} searched={searched} isLoggedIn={loggedIn}></CardContainer>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./materialize.css\";\r\nimport \"./styles.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App></App>, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}