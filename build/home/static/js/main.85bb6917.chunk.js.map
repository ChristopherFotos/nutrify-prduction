{"version":3,"sources":["searchSummary.js","MoreSearchOptions.js","searchDropdown.js","searchComponent.js","loginDropdown.js","recipeCard.js","cardContainer.js","App.js","index.js","LOGO-small.svg"],"names":["SearchSummary","props","query","className","MoreSearchOptions","Fragment","onClick","SearchDropdown","state","calFrom","calTo","options","red","blue","id","type","onChange","this","updateOptions","name","placeholder","e","value","isNaN","target","React","Component","SearchBar","useState","input","setInput","balanced","lowCarb","lowFat","lowSodium","highFiber","highProtein","searchOptions","setQuery","isExpanded","toggleExpand","src","logo","alt","onKeyPress","key","handleEnter","preventDefault","dropdown","document","getElementById","classList","remove","add","Array","from","children","forEach","elem","LoginDropdown","emailValue","setEmailValue","passwordValue","setPasswordValue","verifyPasswordValue","setVerifyPasswordValue","invalidLogin","setInvalidLogin","noPassword","setNoPassword","noEmail","setNoEmail","setNoVerifyPassword","mismatchedPasswords","setMismatchedPasswords","checkRenderProp","render","loginFunction","a","creds","JSON","stringify","email","password","verifyPassword","fetch","method","mode","headers","credentials","body","res","status","isLoggedIn","res2","window","location","reload","data-dropdown","for","RecipeCard","saved","setSaved","handleClick","expanded","innerText","parentElement","li","style","display","ingredientLines","recipe","img","image","label","digest","url","calories","Math","floor","bodyString","href","map","ingredientLine","i","total","unit","length","healthLabels","CardContainer","recipes","uri","searched","App","setRecipes","setDropdown","loggedIn","setLoggedIn","setSearched","useEffect","addEventListener","dataset","req","user","loginDropdown","logout","then","json","data","hits","queries","ReactDOM","module","exports"],"mappings":"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","file":"static/js/main.85bb6917.chunk.js","sourcesContent":["import React from \"react\";\r\n//going to have to loop through the options object and map each search option to its on <p> element\r\nconst SearchSummary = (props) => {\r\n  const renderP = () => {\r\n    if (props.query) {\r\n      return (\r\n        <p className=\"search-summary-p\">\r\n          Showing results for <b>{props.query}</b>\r\n        </p>\r\n      );\r\n    } else return null;\r\n  };\r\n\r\n  return renderP();\r\n};\r\n\r\nexport default SearchSummary;\r\n","import React, { useState } from \"react\";\r\n\r\nconst MoreSearchOptions = (props) => {\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"search-options-label\" onClick={props.onClick}>\r\n        More search options\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default MoreSearchOptions;\r\n","import React, { Component } from \"react\";\r\n\r\n/*==================================================================================================\r\n  This componentrenders the search options dropdown. It uses CSS transitions to collapse and expand. \r\n  It is rendered by SearchBar and takes that component's updateOptions funciton as a prop. This \r\n  component holds several checkboxes that correspond with the diet labels offered by the edamam \r\n  API. When one of the checkboxes is clicked, the props.updateOptions function  is called.\r\n  ================================================================================================*/\r\n\r\nclass SearchDropdown extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { calFrom: null, calTo: null }\r\n    this.calTo = 'null'\r\n    this.options = {\r\n      red: false,\r\n      blue: false,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"search-options-expand\" className=\"search-dropdown-closed\">\r\n        <label className=\"search-option-heading-closed\">\r\n          <input\r\n            type=\"checkbox\"\r\n            onChange={this.props.updateOptions}\r\n            name=\"low carb\"\r\n          />\r\n          <span>Low carb</span>\r\n        </label>\r\n\r\n        <label className=\"search-option-heading-closed\">\r\n          <input\r\n            type=\"checkbox\"\r\n            onChange={this.props.updateOptions}\r\n            name=\"low fat\"\r\n          />\r\n          <span>Low fat</span>\r\n        </label>\r\n\r\n        <label className=\"search-option-heading-closed\">\r\n          <input\r\n            type=\"checkbox\"\r\n            onChange={this.props.updateOptions}\r\n            name=\"balanced\"\r\n          />\r\n          <span>Balanced</span>\r\n        </label>\r\n\r\n        <label className=\"search-option-heading-closed\">\r\n          <input\r\n            type=\"checkbox\"\r\n            onChange={this.props.updateOptions}\r\n            name=\"high protein\"\r\n          />\r\n          <span>High protein</span>\r\n        </label>\r\n\r\n        <label className=\"search-option-heading-closed\">\r\n          <input\r\n            type=\"checkbox\"\r\n            onChange={this.props.updateOptions}\r\n            name=\"high fiber\"\r\n          />\r\n          <span>High fiber</span>\r\n        </label>\r\n\r\n        <label className=\"search-option-heading-closed\">\r\n          <input\r\n            type=\"checkbox\"\r\n            onChange={this.props.updateOptions}\r\n            name=\"low sodium\"\r\n          />\r\n          <span>Low sodium</span>\r\n        </label>\r\n        <p>\r\n          {/* CALORIES */}\r\n          <span className=\"search-option-heading-closed\">nutrient options:</span>\r\n          <input\r\n            className=\"validate\"\r\n            placeholder=\"min calories\"\r\n            name=\"cal-from\"\r\n            type=\"number\"\r\n            onChange={(e) => { this.props.updateOptions(e) }\r\n            }\r\n            value={this.calFrom}\r\n            id=\"option-input-1\"\r\n          />\r\n          <input\r\n            placeholder=\"max calories\"\r\n            name=\"cal-to\"\r\n            type=\"number\"\r\n            value={this.calTo}\r\n            onChange={(e) => {\r\n              if (!isNaN(e.target.value)) { this.props.updateOptions(e) }\r\n            }}\r\n            className=\"validate\"\r\n            id=\"option-input-2\"\r\n          />\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchDropdown;\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport logo from \"./LOGO-small.svg\";\r\nimport SearchSummary from \"./searchSummary\";\r\nimport MoreSearchOptions from \"./MoreSearchOptions\";\r\nimport SearchDropdown from \"./searchDropdown\";\r\n\r\nconst SearchBar = (props) => {\r\n  const [input, setInput] = useState(\"\");\r\n  const [searchOptions, setSearchOptions] = useState({\r\n    balanced: false,\r\n    lowCarb: false,\r\n    lowFat: false,\r\n    lowSodium: false,\r\n    highFiber: false,\r\n    highProtein: false,\r\n  });\r\n  const [query, setQuery] = useState();\r\n  const [isExpanded, toggleExpand] = useState(false);\r\n\r\n  const handleClick = (e) => {\r\n    e.preventDefault();\r\n    //the line below calls the function and passes it the values from the input and the dropdown\r\n    props.onClick(input, searchOptions);\r\n    setQuery(input, searchOptions);\r\n    // props.setSearched()\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setInput(e.target.value);\r\n  };\r\n\r\n  const handleEnter = (e) => {\r\n    if (e.key === 'Enter') {\r\n      props.onClick(input, searchOptions);\r\n      setQuery(input, searchOptions);\r\n    }\r\n  }\r\n\r\n\r\n\r\n  const updateOptions = (e) => {\r\n    e.target.name === \"low carb\"\r\n      ? (searchOptions.lowCarb = !searchOptions.lowCarb)\r\n      : (searchOptions.lowCarb = searchOptions.lowCarb);\r\n\r\n    e.target.name === \"low fat\"\r\n      ? (searchOptions.lowFat = !searchOptions.lowFat)\r\n      : (searchOptions.lowFat = searchOptions.lowFat);\r\n\r\n    e.target.name === \"balanced\"\r\n      ? (searchOptions.balanced = !searchOptions.balanced)\r\n      : (searchOptions.balanced = searchOptions.balanced);\r\n\r\n    e.target.name === \"high protein\"\r\n      ? (searchOptions.highProtein = !searchOptions.highProtein)\r\n      : (searchOptions.highProtein = searchOptions.highProtein);\r\n\r\n    e.target.name === \"high fiber\"\r\n      ? (searchOptions.highFiber = !searchOptions.highFiber)\r\n      : (searchOptions.highFiber = searchOptions.highFiber);\r\n\r\n    e.target.name === \"low sodium\"\r\n      ? (searchOptions.lowSodium = !searchOptions.lowSodium)\r\n      : (searchOptions.lowSodium = searchOptions.lowSodium);\r\n\r\n    if (e.target.name === 'cal-from' && !isNaN(e.target.value)) {\r\n      searchOptions.calFrom = e.target.value\r\n    }\r\n\r\n    if (e.target.name === 'cal-to' && !isNaN(e.target.value)) {\r\n      searchOptions.calTo = e.target.value\r\n    }\r\n  };\r\n\r\n  const toggle = () => {\r\n    toggleExpand(!isExpanded);\r\n\r\n    let dropdown = document.getElementById(\"search-options-expand\");\r\n\r\n    dropdown.classList.remove(\"search-dropdown-closed\");\r\n    dropdown.classList.add(\"search-dropdown-open\");\r\n\r\n\r\n    let childArray = Array.from(dropdown.children);\r\n\r\n    childArray.forEach((elem) => {\r\n      elem.classList.remove(\"search-option-heading-closed\");\r\n      elem.classList.add(\"search-option-heading-open\");\r\n    });\r\n  };\r\n\r\n  const toggleOff = () => {\r\n    toggleExpand(!isExpanded);\r\n    let dropdown = document.getElementById(\"search-options-expand\");\r\n\r\n    dropdown.classList.remove(\"search-dropdown-open\");\r\n    dropdown.classList.add(\"search-dropdown-closed\");\r\n\r\n    let childArray = Array.from(dropdown.children);\r\n\r\n    childArray.forEach((elem) => {\r\n      elem.classList.remove(\"search-option-heading-open\");\r\n      elem.classList.add(\"search-option-heading-closed\");\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form className=\"search-form\">\r\n      <div className=\"search-flexbox-span flex-align-bottom\">\r\n        <img src={logo} className=\"logo\" alt=\"nutrify logo\"></img>\r\n        <span className=\"subline\">powered by edamam</span>\r\n      </div>\r\n      <input\r\n        type=\"text\"\r\n        id=\"search-bar\"\r\n        value={input}\r\n        onChange={handleChange}\r\n        onKeyPress={(e) => handleEnter(e)}\r\n        className=\"search-bar\"\r\n        placeholder=\"search by ingredient or recipe name\"\r\n      ></input>\r\n      <div className=\"search-flexbox-span\">\r\n        <a\r\n          className=\"waves-effect waves-light btn search-button\"\r\n          onClick={handleClick}\r\n        >\r\n          search\r\n        </a>\r\n\r\n        <MoreSearchOptions\r\n          onClick={isExpanded ? toggleOff : toggle}\r\n        ></MoreSearchOptions>\r\n      </div>\r\n      <SearchDropdown updateOptions={updateOptions}></SearchDropdown>\r\n      <SearchSummary query={query}></SearchSummary>\r\n    </form >\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import React, { Component, useState, useEffect } from \"react\";\r\n\r\n\r\nconst LoginDropdown = (props) => {\r\n\r\n    const [emailValue, setEmailValue] = useState('');   // value of the email input\r\n    const [passwordValue, setPasswordValue] = useState('');   // value of the input \r\n    const [verifyPasswordValue, setVerifyPasswordValue] = useState('');   // value of the verify password input\r\n    const [invalidLogin, setInvalidLogin] = useState(false) // following hooks are set to true when the user's input is invalid or empty\r\n    const [noPassword, setNoPassword] = useState(false)\r\n    const [noEmail, setNoEmail] = useState(false)\r\n    const [noVerifyPassword, setNoVerifyPassword] = useState(false)\r\n    const [mismatchedPasswords, setMismatchedPasswords] = useState(false) // set to true when passwords don't match while registering \r\n\r\n    // The following 3 functions sync the value of the login inputs\r\n    // with their respective state hooks.  \r\n\r\n    let emailChange = (e) => {\r\n        setEmailValue(e.target.value)\r\n    }\r\n\r\n    let passwordChange = (e) => {\r\n        setPasswordValue(e.target.value)\r\n    }\r\n    let verifyPasswordChange = (e) => {\r\n        setVerifyPasswordValue(e.target.value)\r\n    }\r\n\r\n    // The following function returns the value of the render prop \r\n\r\n    const checkRenderProp = () => {\r\n        if (props.render === 'login') {\r\n            return 'login'\r\n        } else { return 'signup' }\r\n    }\r\n\r\n    //  The following function handles logging in and signing up. It runs\r\n    //  when the login or signup button is clicked.  \r\n\r\n    async function loginFunction() {\r\n\r\n        let creds = JSON.stringify({ // get and stringify the value of the inputs\r\n            email: emailValue,\r\n            password: passwordValue,\r\n            verifyPassword: verifyPasswordValue\r\n        })\r\n\r\n        if (checkRenderProp() === 'signup' && passwordValue !== verifyPasswordValue) {\r\n            setMismatchedPasswords(true)\r\n            return\r\n        }\r\n\r\n        if (emailValue === '') {\r\n            setNoEmail(true)\r\n            return\r\n        }\r\n\r\n        if (passwordValue === '') {\r\n            setNoPassword(true)\r\n            return\r\n        }\r\n\r\n        if (checkRenderProp() === 'signup' && verifyPasswordValue === '') {\r\n            setNoVerifyPassword(true)\r\n        }\r\n\r\n        const res = await fetch(`/user/${checkRenderProp()}`, { // use those values to send a request to the login or signup route, depending on the value of props.render. \r\n            method: 'POST',\r\n            mode: 'cors',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            credentials: 'include',\r\n            body: creds\r\n\r\n\r\n        })\r\n\r\n        if (res.status === 401) {\r\n            setInvalidLogin(true)\r\n            props.isLoggedIn(false)\r\n            return\r\n        }\r\n\r\n        if (res.status === 201 || res.status === 200) { // if the response is OK, run the props.loggedIn function with argument 'true'. This will set the isLoggedIn to true in the app component. \r\n            props.isLoggedIn(true)\r\n            setInvalidLogin(false)\r\n\r\n            if (checkRenderProp() === 'signup' && !invalidLogin) { // if props.render is 'signup' and invalidLogin is false, login to the account the user just created. \r\n                const res2 = await fetch('/user/login', {\r\n                    method: 'POST',\r\n                    mode: 'cors',\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    credentials: 'include',\r\n                    body: creds\r\n                })\r\n\r\n                if (res2.status === 409) {\r\n                    setInvalidLogin(true)\r\n                } else if (res2.status === 200) {\r\n                    setInvalidLogin(false)\r\n                    window.location.reload()\r\n                    props.isLoggedIn(true)\r\n                }\r\n            }\r\n        } else if (res.status === 409) {\r\n            setInvalidLogin(true)\r\n        }\r\n    }\r\n\r\n    let handleEnter = (e) => {\r\n        if (e.key === 'Enter') {\r\n            loginFunction()\r\n        }\r\n    }\r\n\r\n    // The return statement begins below\r\n\r\n    return (\r\n        <div className=\"login-dropdown\" id=\"login-dropdown\" data-dropdown='true'>\r\n            <h4 data-dropdown='true'>\r\n                {props.render === 'login' && 'login'}\r\n                {props.render === 'signup' && 'signup'}\r\n            </h4>\r\n            <form data-dropdown='true'>\r\n                <label for='email' data-dropdown='true'>Email</label>\r\n                <input type='text' name='email' data-dropdown='true' className=\"login-input\" onChange={emailChange} onKeyPress={(e) => { handleEnter(e) }} />\r\n                <label for='password' data-dropdown='true'>Password</label>\r\n                <input type='password' name='password' data-dropdown='true' className=\"login-input\" onChange={passwordChange} onKeyPress={(e) => { handleEnter(e) }} />\r\n                {props.render === 'signup' &&\r\n                    <React.Fragment>\r\n                        <label for='verify-password' data-dropdown='true'>Verify password</label>\r\n                        <input type='password' name='verify-password' data-dropdown='true' className=\"login-input\" onChange={verifyPasswordChange} onKeyPress={(e) => { handleEnter(e) }} />\r\n                    </React.Fragment>\r\n                }\r\n                <span className=\"login-button\" onClick={loginFunction} data-dropdown='true'>\r\n                    {props.render === 'login' && 'login'}\r\n                    {props.render === 'signup' && 'sign up'}\r\n                </span>\r\n            </form>\r\n            {(invalidLogin && props.render === 'signup') &&\r\n                <p>Whoops! That email is already being used.</p>\r\n            }\r\n            {(invalidLogin && props.render === 'login') &&\r\n                <p>Whoops! Invalid email or password.</p>\r\n            }\r\n            {mismatchedPasswords &&\r\n                <p>Whoops! Those passwords don't match.</p>\r\n            }\r\n            {noEmail &&\r\n                <p>Whoops! Please provide an email address</p>\r\n            }\r\n            {noPassword &&\r\n                <p>Whoops! Please provide a password</p>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginDropdown","import React, { useEffect, useState } from \"react\";\r\nimport { CSSTransition } from 'react-transition-group'\r\n\r\n\r\nconst RecipeCard = (props) => {\r\n  let [saved, setSaved] = useState(false)\r\n\r\n  let handleClick = (e) => {\r\n\r\n    if (!e.target.expanded) {\r\n      //Checks if the div is collpased and opens it\r\n      e.target.expanded = true;\r\n      e.target.innerText = \"Hide\";\r\n      Array.from(e.target.parentElement.children[1].children).forEach(\r\n        (li) => {\r\n          li.style.display = \"block\";\r\n        }\r\n      );\r\n      e.target.parentElement.children[1].classList.remove(\r\n        \"card-content-closed\"\r\n      );\r\n      e.target.parentElement.children[1].classList.add(\"card-content-open\");\r\n      e.target.parentElement.classList.remove(\"card-closed\");\r\n      e.target.parentElement.classList.add(\"card-open\");\r\n    } else if (e.target.expanded) {\r\n      //Checks if the div is open and collapses it\r\n      e.target.expanded = false;\r\n      e.target.innerText = \"Show\";\r\n      Array.from(e.target.parentElement.children[1].children).forEach(\r\n        (li) => {\r\n          li.style.display = \"none\";\r\n        }\r\n      );\r\n      e.target.parentElement.children[1].classList.remove(\r\n        \"card-content-open\"\r\n      );\r\n      e.target.parentElement.children[1].classList.add(\r\n        \"card-content-closed\"\r\n      );\r\n      e.target.parentElement.children[1].classList.remove(\"card-open\");\r\n      e.target.parentElement.classList.remove(\"card-open\");\r\n      e.target.parentElement.classList.add(\"card-closed\");\r\n    }\r\n  }\r\n\r\n\r\n  async function saveFunction() {\r\n    // Create an object to form the body of our POST request\r\n    if (!saved) {\r\n      let body = {\r\n        ingredientLines: props.recipe.recipe.ingredientLines,\r\n        img: props.recipe.recipe.image,\r\n        label: props.recipe.recipe.label,\r\n        digest: props.recipe.recipe.digest,\r\n        url: props.recipe.recipe.url,\r\n        calories: Math.floor(props.recipe.recipe.calories)\r\n        // Modify this object to include nutrition labels and link to instructions \r\n      }\r\n\r\n\r\n      let bodyString = JSON.stringify(body)\r\n\r\n      // Make the fetch request \r\n      const res = await fetch('/user/save', {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        credentials: 'include',\r\n        body: bodyString\r\n      })\r\n\r\n      setSaved(!saved)\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n\r\n    <div className=\"grid-card\">\r\n      <img\r\n        src={props.recipe.recipe.image}\r\n        className=\"card-img\"\r\n        alt={props.recipe.recipe.label}\r\n      />\r\n      <span className=\"recipe-title\">{props.recipe.recipe.label}</span>\r\n      {props.isLoggedIn !== null && <span className={!saved && 'save-button'} onClick={saveFunction}>\r\n        {!saved && 'Save recipe'}\r\n        {saved && <span className='save-button-inactive'>Recipe saved!</span>}\r\n      </span>}\r\n      <div className=\"card-content\">\r\n        <span className=\"show-details show-details-open ingredient-card-tag\" onClick={handleClick}>\r\n          Show\r\n        </span>\r\n\r\n        <div className=\"card-content-closed\">\r\n          <a href={props.recipe.recipe.url} target=\"_blank\" className='full-instructions-link' style={{ display: \"none\" }}>See full instructions</a>\r\n          <ul style={{ display: \"none\" }}>\r\n            {props.recipe.recipe.ingredientLines.map((ingredientLine) => {\r\n              return <li>{ingredientLine}</li>;\r\n            })}\r\n          </ul>\r\n\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"card-content\">\r\n        <span className=\"show-details show-details-open nutrition-card-tag\" onClick={handleClick}>\r\n          Show\r\n        </span>\r\n\r\n        <div className=\"card-content-closed\">\r\n          <ul style={{ display: \"none\" }}>\r\n            {props.recipe.recipe.digest.map((i) => {\r\n              return (\r\n                <li><b>{i.label}:</b> {Math.floor(i.total)} {i.unit}</li>\r\n              )\r\n            })}\r\n          </ul>\r\n        </div>\r\n\r\n        <div className=\"recipe-summary-div\">\r\n          {props.recipe.recipe.ingredientLines.length} ingredients {props.recipe.recipe.healthLabels.map((label) => { return `| ${label} ` })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecipeCard;\r\n","import React from \"react\";\r\nimport RecipeCard from \"./recipeCard\";\r\nimport './styles.css'\r\n\r\n\r\n// This component renders a container for the recipe cards that are returned when the user enters a search term. It accepts an array\r\n// of recipe objects as its props, and it uses that array to render recipe card components. When this component rerenders, the useEffect\r\n// hook adds event listeners to the cards so that they can be opened and closed on click.\r\n\r\nconst CardContainer = (props) => {\r\n\r\n  if (props.recipes) {\r\n    return (\r\n        <div className=\"card-container\">\r\n          {props.recipes.map((recipe) => {\r\n            return (\r\n\r\n            <RecipeCard recipe={recipe} isLoggedIn={props.isLoggedIn} key={recipe.recipe.label + '_uri_' + recipe.recipe.uri}></RecipeCard>\r\n\r\n          );\r\n          })}\r\n        </div>\r\n      \r\n    );\r\n  } else if (!props.recipes && props.searched){\r\n    return (\r\n      <h3 id=\"no-results-message\">Sorry! We couldn't find anything.</h3>\r\n    )\r\n  } else { return null }\r\n};\r\n\r\nexport default CardContainer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport SearchBar from \"./searchComponent\";\r\nimport SearchSummary from \"./searchSummary\";\r\nimport LoginDropdown from \"./loginDropdown\";\r\nimport './styles.css'\r\n\r\nimport CardContainer from \"./cardContainer\";\r\n\r\nconst App = () => {\r\n  const [recipes, setRecipes] = useState([]);\r\n  const [query, setQuery] = useState(\"\");\r\n  const [dropdown, setDropdown] = useState(null)\r\n  const [loggedIn, setLoggedIn] = useState(null)\r\n  const [searched, setSearched] = useState(false)\r\n  const APP_ID = \"75c55f11\";\r\n  const APP_KEY = \"85c90ba0da33bd59f927417d3d72febe\";\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('mousedown', (e) => {\r\n      if (dropdown === 'login' || dropdown === 'signup') {\r\n        if (e.target.id !== 'login-dropdown' &&\r\n          e.target.id !== 'login-button' &&\r\n          e.target.id !== 'signup-button' &&\r\n          e.target.id !== 'login-dropdown' &&\r\n          !e.target.dataset.dropdown) {\r\n          setDropdown(null)\r\n        }\r\n      }\r\n    })\r\n  })\r\n\r\n  useEffect(() => { // Check if a user is logged in, change logged in if so\r\n    const req = async () => {\r\n      let res = await fetch('/user/verify',\r\n        {\r\n          method: 'POST',\r\n          mode: 'cors',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          credentials: 'include'\r\n        }\r\n      )\r\n      if (res.status === 200) { setLoggedIn(true); }\r\n    }\r\n    req()\r\n  }, [loggedIn])\r\n\r\n  const isLoggedIn = (user) => { // This function is passed down the component tree to the loginDropdown. When a user successfully log in this function is run with the the argument 'true'\r\n    setLoggedIn(user)\r\n  }\r\n\r\n  const loginDropdown = (target) => {  // Toggling the signup dropdown\r\n    if (target === 'signup') {\r\n      if (dropdown === 'signup') {\r\n        setDropdown(null)\r\n      } else { setDropdown('signup') }\r\n    }\r\n\r\n    if (target === 'login') {   // Toggling the login dropdown\r\n      if (dropdown === 'login') {\r\n        setDropdown(null)\r\n      } else { setDropdown('login') }\r\n    }\r\n  };\r\n\r\n  const logout = async () => {  // Making the logout request \r\n    let res = await fetch('/user/logout',\r\n      {\r\n        method: 'GET',\r\n        mode: 'cors',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        credentials: 'include'\r\n      }\r\n    )\r\n    if (res.status === 200) {\r\n      window.location.reload()\r\n    }\r\n  }\r\n\r\n  const getRecipes = (input, options) => {    // Building the request string and sending the request with fetch\r\n    let req = `https://api.edamam.com/search?q=${input}&app_id=${APP_ID}&app_key=${APP_KEY}&from=0&to=100`;\r\n\r\n    // The following conditionals add the user's diet type selections to the request string (above)\r\n    if (options.lowCarb) {\r\n      req += `&diet=low-carb`;\r\n    }\r\n    if (options.lowFat) {\r\n      req += `&diet=low-fat`;\r\n    }\r\n\r\n    if (options.balanced) {\r\n      req += `&diet=balanced`;\r\n    }\r\n\r\n    if (options.highProtein) {\r\n      req += `&diet=high-protein`;\r\n    }\r\n\r\n    if (options.highFiber) {\r\n      req += `&diet=high-fiber`;\r\n    }\r\n\r\n    if (options.lowSodium) {\r\n      req += `&diet=low-sodium`;\r\n    }\r\n\r\n    if ((options.calFrom && options.calTo) && (options.calFrom < options.calTo)) {\r\n      req += `&calories=${options.calFrom}-${options.calTo}`\r\n    }\r\n\r\n    fetch(req)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setRecipes(data.hits);\r\n        setSearched(true)\r\n      });\r\n  };\r\n\r\n  const renderSearchSummary = () => {   // Render the search summary \r\n    if (query) {\r\n      return <SearchSummary queries={null}></SearchSummary>;\r\n    } else return null;\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"navbar\">\r\n        {!loggedIn &&\r\n          <div className=\"navbar-button-container\" id='guest-navbar'>\r\n            <span className=\"navbar-button\" id=\"login-button\" onClick={() => loginDropdown('login')}>login</span>\r\n            <span className=\"navbar-button\" id=\"signup-button\" onClick={() => loginDropdown('signup')}>sign up</span>\r\n            {dropdown === 'login' &&\r\n              <LoginDropdown render='login' isLoggedIn={isLoggedIn}></LoginDropdown>\r\n            }\r\n            {dropdown === 'signup' &&\r\n              <LoginDropdown render='signup' isLoggedIn={isLoggedIn}></LoginDropdown>\r\n            }\r\n          </div>\r\n        }\r\n\r\n        {loggedIn &&\r\n          <div className=\"navbar-button-container\" id='guest-navbar'>\r\n            <a href=\"/dashboard\" className=\"navbar-button\" id=\"dashboard-button\">dashboard</a>\r\n            <span className=\"navbar-button\" id=\"login-button\" onClick={logout}>logout</span>\r\n          </div>\r\n        }\r\n      </div>\r\n      <div className=\"app-container\">\r\n        <SearchBar onClick={getRecipes} setSearched={() => { setSearched(true) }}></SearchBar>\r\n        {renderSearchSummary()}\r\n        <CardContainer recipes={recipes} searched={searched} isLoggedIn={loggedIn}></CardContainer>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./materialize.css\";\r\nimport \"./styles.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App></App>, document.getElementById(\"root\"));\r\n","module.exports = __webpack_public_path__ + \"static/media/LOGO-small.0f2b0d27.svg\";"],"sourceRoot":""}